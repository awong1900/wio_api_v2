---
swagger: '2.0'
info:
  version: v2
  title: Wio API v2
  description: |
    Wio IOT 平台是一款物联网应用平台，真正的WOT产品。Restful API帮助用户完成产品定义和部署。

    ## 端点
    API请求的端点为
    	
        https://wio.seeed.io/v2
        https://wio.forkthings.com/v2 (test)
    	
    所有的返回都为json格式。
    	
    	
    ## Token
    每个请求都需要带上认证信息，有两种方式携带认证信息。
    
    - 在`Header`添加`Authorization`，例如：
    	
    		  Authorization: token 313be000160b425baf933d47e12b1e9e
    	
    - 在请求参数中添加`access_token`，例如：
    
    		https://wio.seeed.io/v2/user?access_token= 313be000160b425baf933d47e12b1e9e
    		
    ## 响应码
    API完全遵循HTTP 状态码协议规定，不同响应码：
    
    状态码 | 描述
    ---|---
    200 | OK，正常响应
    201 | Created，资源创建成功
    202 | Accepted，请求已接受，后台服务正在处理
    302 | Retry，重定向
    400 | Error，出现错误，会带上错误消息
    403 | Forbidden，没有访问资源的权限
    404 | Not Found，没有发现资源
    405 | Method Not Allowed
    500 | Internal Server Error，系统错误，服务器停止
    
    ## 错误消息
    `status code：400`
    
      	{
      	  "error": "Invalid user",
      	}
    	
    ## 时间格式
    时间采用`ISO8601`格式。如`YYYY-MM-DDTHH:MM:SSZ`
  
schemes:
  - https
host: wio.forkthings.com
paths:
  /v2/user:
    get:
      tags:
        - users
      security:
        - access_token: []
      responses:
        200:
          description: OK
    delete:
      tags:
        - users
      security:
        - access_token: []
      responses:
        200:
          description: OK  
  /v2/users:
    get:
      tags:
        - users
      security:
        - access_token: []
      responses:
        200:
          description: OK
  /v2/users/{user_id}:
    get:
      tags:
        - users
      security:
        - access_token: []
      parameters:
        - name: user_id
          in: path
          description: ID of user
          required: true
          type: string
      responses:
        200:
          description: OK
  /v2/user/token:
    get:
      tags:
        - users
      security:
        - access_token: []
      responses:
        200:
          description: OK
  /v2/user/{user_id}/token:
    get:
      tags:
        - users
      security:
        - access_token: []
      parameters:
        - name: user_id
          in: path
          description: ID of user
          required: true
          type: string        
      responses:
        200:
          description: OK        
  /v2/things:
    get:
      tags:
        - things
      security:
        - access_token: []
      summary: sd
      description: sdf
      responses:
        200:
          description: OK
    
    post:
      tags:
        - things
      security:
        - access_token: []
      # summary: sdf
      # description: 12
      produces:
        - application/json
      parameters:
        - name: thing
          in: body
          # description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/newThing'        
      responses:
        201:
          description: Created
    
  # /v2/things/{thing_id}:
  #   get:
  #     summary: 
  #     description: 
  #     responses:
  #       200:
  #         description: OK
    
  #   patch:
  #     summary: 
  #     description: 
  #     responses:
  #       200:
  #         description: OK
          
  #   delete:
  #     summary: 
  #     description: 
  #     responses:
  #       200:
  #         description: OK
    
  # /v2/things/{thing_id}/page:
  #   get:
  #     summary: 
  #     description: 
  #     responses:
  #       200:
  #         description: OK
    
  # /v2/things/{thing_id}/ota:
  #   get:
  #     summary: 
  #     description: 
  #     responses:
  #       200:
  #         description: OK
tags:
  - name: users
  - name: things
  - name: firmwares
  
securityDefinitions:
  # Authorization:
  #   type: apiKey
  #   in: header
  #   name: Authorization
  access_token:
    type: apiKey
    in: query
    name: access_token
definitions:
  newThing:
    type: object
    required:
      - board
    properties:
      board:
        type: string
      name:
        type: string
        